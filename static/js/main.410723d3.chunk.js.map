{"version":3,"sources":["context.js","components/DetailsComponent.js","components/LoanCalculatorComponent.js","components/HeaderComponent.js","components/DataComponent.js","components/MainComponent.js","App.js","components/FooterComponent.js","serviceWorker.js","index.js"],"names":["LoanContext","React","createContext","LoanProvider","props","fetchData","amount","duration","fetch","then","res","json","results","setState","isLoaded","loanDetails","monthlyPayment","jsonObj","localStorage","getItem","ls","JSON","parse","list","state","setItem","stringify","dataList","error","handleAmountChange","value","handleDurationChange","this","Provider","children","Component","LoanConsumer","Consumer","Details","className","interestRate","LoanCalculator","class","step","maxValue","minValue","onChange","Header","Jumbotron","Data","map","data","onClick","principal","numPayments","Main","App","Footer","href","Boolean","window","location","hostname","match","ReactDOM","render","key","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.410723d3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst LoanContext = React.createContext();\r\n//Provider\r\n//Consumer\r\n\r\nclass LoanProvider extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            amount: 500,\r\n            duration: 6,\r\n            isLoaded: false,\r\n            loanDetails:{},\r\n            monthlyPayment:{},\r\n            dataList: [],\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.fetchData(this.state.amount,this.state.duration);\r\n    }\r\n    fetchData=(amount,duration)=>{\r\n        fetch(`https://ftl-frontend-test.herokuapp.com/interest?amount=${amount}&numMonths=${duration}`)\r\n        .then(res=>res.json())\r\n        .then(\r\n            (results) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    loanDetails: results,\r\n                    monthlyPayment:results.monthlyPayment\r\n                },()=>{\r\n                    const jsonObj=localStorage.getItem('storeDetails');\r\n                    const ls =JSON.parse(jsonObj);\r\n                    const list = (ls != null) ? [...ls,this.state.loanDetails] : [this.state.loanDetails];\r\n                    localStorage.setItem('storeDetails',JSON.stringify(list));\r\n                    this.setState({\r\n                        dataList: list\r\n                    })\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded:true,\r\n                    error\r\n                });\r\n            }\r\n            \r\n        )\r\n    }\r\n\r\n    handleAmountChange = value => {\r\n        this.setState({ amount: value },()=>{this.fetchData(this.state.amount,this.state.duration);});\r\n      };\r\n\r\n      handleDurationChange = value => {\r\n        this.setState({ duration: value },()=>{this.fetchData(this.state.amount,this.state.duration);});\r\n      };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <LoanContext.Provider value={{\r\n                amount:this.state.amount,\r\n                duration: this.state.duration,\r\n                isLoaded: this.state.isLoaded,\r\n                loanDetails:this.state.loanDetails,\r\n                dataList: this.state.dataList,\r\n                monthlyPayment:this.state.monthlyPayment,\r\n                handleAmountChange:this.handleAmountChange,\r\n                handleDurationChange: this.handleDurationChange,\r\n                fetchData: this.fetchData,\r\n                }}>\r\n               { this.props.children } \r\n            </LoanContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst LoanConsumer = LoanContext.Consumer;\r\nexport { LoanProvider, LoanConsumer };","import React from \"react\";\r\nimport { LoanConsumer } from '../context';\r\n\r\nexport default function Details(props) {\r\n    \r\n    return (\r\n        \r\n        <div className=\"details-container\">\r\n            <LoanConsumer>\r\n            {(value) =>{\r\n                return(\r\n                    <>\r\n                    <h6 className=\"interestRate\">Interest Rate:- <span className=\"blue\">{value.loanDetails.interestRate}</span></h6>\r\n                    <h6 className=\"repayment\">Monthly Payment:- <span className=\"blue\">${value.monthlyPayment.amount}</span></h6>\r\n                    </>\r\n                )\r\n            }}\r\n            \r\n            </LoanConsumer>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport InputRange from \"react-input-range\";\r\nimport Details from \"./DetailsComponent\";\r\nimport \"react-input-range/lib/css/index.css\";\r\nimport { LoanConsumer } from '../context';\r\n\r\nclass LoanCalculator extends Component {  \r\n  \r\n  render() {\r\n\r\n    return (\r\n      <div className=\"loan-container\">\r\n        <LoanConsumer>\r\n        {(value) =>{\r\n          const { amount, duration, handleAmountChange, handleDurationChange }= value;\r\n          return(\r\n            <div class=\"calculator\">\r\n            \r\n          <InputRange\r\n            step={100}\r\n            maxValue={5000}\r\n            minValue={500}\r\n            value={amount}\r\n            onChange={handleAmountChange}\r\n          />\r\n          <h4>Loan Amount ${amount}</h4>\r\n          \r\n          <InputRange\r\n            step={1}\r\n            maxValue={24}\r\n            minValue={6}\r\n            value={duration}\r\n            onChange={handleDurationChange}\r\n          />\r\n          <h4>\r\n            Over {duration} year{duration > 1 && \"s\"}\r\n          </h4>\r\n          <Details />\r\n          </div>\r\n          )\r\n          \r\n        }}\r\n        \r\n        </LoanConsumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoanCalculator;","import React, { Component } from 'react';\r\nimport { Jumbotron } from 'reactstrap';\r\n\r\nclass Header extends Component{\r\n  \r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<>\t\r\n      \t\t\t<Jumbotron>\r\n      \t\t\t\t<div className=\"container\">\r\n          \t\t\t\t<div className=\"row row-header\">\r\n\t          \t\t\t\t<div className=\"col-12 col-sm-6\">\r\n\t          \t\t\t\t\t<h1>Loan Calculator</h1>\r\n\t          \t\t\t\t\t<p>Loan repayment details</p>\r\n\t        \t\t\t\t</div>\r\n        \t\t\t\t</div>\r\n        \t\t\t</div>\r\n      \t\t\t</Jumbotron>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { LoanConsumer } from '../context';\r\n\r\nexport default class Data extends Component {\r\n    \r\n    \r\n    render() {\r\n        return(\r\n            <LoanConsumer>\r\n            { (list) => {\r\n                const {dataList,fetchData,handleAmountChange, handleDurationChange}=list;\r\n        \r\n                if (dataList){\r\n                    return (\r\n                        \r\n                        dataList.map((data) => {\r\n                            return(\r\n                            <button className=\"dataContainer\" onClick={()=>{fetchData(data.principal.amount,data.numPayments); handleAmountChange(data.principal.amount); handleDurationChange(data.numPayments); }}>\r\n                                \r\n                                <h6>Amount: {data.principal.amount}</h6>\r\n                                <h6>  Years: {data.numPayments}</h6>\r\n                            </button>\r\n                            )\r\n                    })\r\n                    \r\n                    );\r\n            }\r\n            else{\r\n                return null;\r\n            }\r\n            \r\n    }}\r\n        </LoanConsumer>\r\n        )\r\n       \r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport LoanCalculator from './LoanCalculatorComponent';\r\nimport Header from './HeaderComponent';\r\nimport Data from './DataComponent';\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div class=\"home-container\">\r\n               <LoanCalculator/> \r\n               <div class=\"data-wrapper\">    \r\n                <Data/>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.scss';\r\nimport { LoanProvider } from './context.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <LoanProvider>\r\n      <div className=\"App\">\r\n      <Main/>\r\n      </div>\r\n    </LoanProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nfunction Footer(props){\r\n\treturn(\r\n\t\t<div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row \">             \r\n                <div className=\"col-4 col-sm-4\">\r\n                    <h2>Loan Calculator</h2>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"col-8 col-sm-8 \">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        </div>\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default Footer;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport App from './App';\r\nimport Footer from './components/FooterComponent';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render([<App key=\"1\" />, <Footer key=\"2\" />], document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}